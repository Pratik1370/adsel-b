<html>
	<head>
		<title>Simple Line Graph using SVG and d3.js</title>
		<script src="https://d3js.org/d3.v4.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.9.1/d3-tip.js"></script>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <style>
			/* tell the SVG path to be a thin blue line without any area fill */
			path {
				stroke: steelblue;
				stroke-width: 1;
				fill: none;
			}
			
			.axis {
			  shape-rendering: crispEdges;
			}

			.x.axis line {
			  stroke: lightgrey;
			}

			.x.axis .minor {
			  stroke-opacity: .5;
			}

			.x.axis path {
			  display: none;
			}
      .axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}
			.y.axis line, .y.axis path {
			  fill: none;
			  stroke: #000;
			}

      .axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
.bar1 {
  fill: steelblue;
}
.bar2 {
  fill: orange;
}
.x.axis path {
  display: none;
}
#bar-chart2{
	margin-bottom: 20px;
}
.graph-style {
	border: #000 1px solid;
	/* margin: 5px; */
}
		</style>
	</head>
	<body>
		<div class="container">
				<div class="row" style="padding: 15px">
						<div id="bar-chart2" class="graph-style"></div>
					</div>
			<div class="row">
				<div id="graph" class="col-lg-6 col-md-6 col-sm-6 " style="padding: 10px;">
						<div class="aGraph graph-style" id="graph" ></div>
				</div>
				<div class="col-lg-6 col-md-6 col-sm-6" style="padding: 10px;">
					<div class="graph-style" id="line-chart2" ></div>
				</div>
			</div>
			<div class="clear"></div>
			<div class="row" style="margin-bottom: 100px"></div>
			
		</div>
	<script>
    
    		// define dimensions of graph
		var m = [10, 10, 10, 50]; // margins
		var w = 570 - m[1] - m[3]; // width
    var h = 320 - m[0] - m[2]; // height
    // var data = [3, 6, 2, 7, 5, 2, 0, 3, 8, 9, 2, 5, 9, 3, 6, 3, 6, 2, 7, 5, 2, 1, 3, 8, 9, 2, 5, 9, 2, 7];
    var data = <%-JSON.stringify(result.single_country_temp) %>;
		var x = d3.scaleLinear().domain([0, data.length]).range([0, w]);
		var y = d3.scaleLinear().domain([0, 50]).range([h, 0]);
		var line = d3.line()
			.x(function(d,i) { 
				return x(i); 
			})
			.y(function(d) { 
				return y(d); 
			})

			var graph = d3.select("#graph").append("svg:svg")
			      .attr("width", w + m[1] + m[3])
			      .attr("height", h + m[0] + m[2])
			      .append("svg:g")
			      .attr("transform", "translate(" + m[3] + "," + m[0] + ")");

			//  yAxis
			var xAxis = d3.axisBottom().scale(x).tickSize(-h) ;
			// Add x-axis.
			graph.append("svg:g")
			      .attr("class", "x axis")
			      .attr("transform", "translate(0," + h + ")");
			      // .call(xAxis);	


			//  left yAxis
			var yAxisLeft = d3.axisLeft().scale(y).ticks(4);
			// Add  y-axis to the left
			graph.append("svg:g")
			      .attr("class", "y axis")
			      .attr("transform", "translate(-25,0)")
			      .call(yAxisLeft);
			
  	graph.append("svg:path").attr("d", line(data));
			

	</script>

<script>

	var margin = {top: 40, right: 20, bottom: 30, left: 70},
			width = 770 - margin.left - margin.right,
			height = 550 - margin.top - margin.bottom;
	
	// var data=[{"Employee":"John Doe","Salary":58},{"Employee":"Jane Doe","Salary":81},{"Employee":"Mary Jane","Salary":39},{"Employee":"Debasis Das","Salary":80},{"Employee":"Nishant Singh","Salary":99}];
	var bar_data = <%-JSON.stringify(result.china_data) %>;
	console.log(bar_data);
	var x = d3.scaleBand()
			.rangeRound([0, width], .1);
	
	var y = d3.scaleLinear()
			.range([height, 0]);
	
	var xAxis = d3.axisBottom()
			.scale(x);
			// .orient("bottom");
	
	var yAxis = d3.axisLeft()
			.scale(y);
			// .orient("left")
			// .ticks(10, "");
	
	var tip = d3.tip()
		.attr('class', 'd3-tip')
		.offset([-10, 0])
		.html(function(d) {
			return "<strong>Temp:</strong> <span style='color:red'>" + d.temp + "</span>";
		})
	var svg = d3.select("#bar-chart2").append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
		.append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	
	svg.call(tip);
	
	
	
	x.domain(bar_data.map(function(d) { return d.city; }));
	y.domain([d3.min(bar_data,function(d){return d.temp}), d3.max(bar_data, function(d) { return d.temp; })]);
	
	svg.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(-20 ," + height - margin.top - margin.bottom + ")")
		.call(xAxis)
		.selectAll("text")  
		.style("text-anchor", "start")
		.attr("dx", ".18em")
		.attr("transform", "rotate(-90)" );
		
	
	svg.append("g")
		.attr("class", "y axis")
		.data(bar_data)
		.call(yAxis)
	.append("text")
		.attr("transform", "rotate(-90)")
		// .attr("y", -36)
		.attr("y", function(d) { return y(Math.max(0, d.temp)); })
		.attr("dy", "0em")
		.style("text-anchor", "end")
		.text("Avg Temperature");
	
	svg.selectAll(".bar")
		.data(bar_data)
	.enter().append("rect")
		.attr("class", "bar")
		.attr("x", function(d) { return x(d.city); })
		// .attr("width", x.bandwidth())
		.attr("width", 20)
		.attr("y", function(d) { return y(d.temp); })
		// .attr("height", function(d) { return height - y(d.temp); })
		.attr("height", function(d) { return Math.abs(y(d.temp) - y(0)); })
		.on('mouseover', tip.show)
		.on('mouseout', tip.hide);
	
	svg.append("text")
				.attr("x", (width / 2))             
				.attr("y", 0 - (margin.top / 2))
				.attr("text-anchor", "middle")  
				.style("font-size", "16px") 
				.style("text-decoration", "underline")  
				.text("Value vs Date Graph");
	function type(d) {
		// console.log('before'+ d.temp);
		d.temp = +d.temp;
		// console.log('after'+ d.temp);
		return d;
	}
	
	</script>

<script>

	
	var margin = {top: 40, right: 20, bottom: 30, left: 70},
			width = 570 - margin.left - margin.right,
			height = 320 - margin.top - margin.bottom;

	var svg = d3.select("#line-chart2").append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
		.append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	
		// var svg = d3.select("#line-chart2"),
		// 		margin = {top: 20, right: 20, bottom: 30, left: 50},
		// 		width = +svg.attr("width") - margin.left - margin.right,
		// 		height = +svg.attr("height") - margin.top - margin.bottom,
		// 		g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
		
		var parseTime = d3.timeParse("%Y-%m-%d");
		
		var x = d3.scaleTime()
				.rangeRound([0, width]);
		
		var y = d3.scaleLinear()
				.rangeRound([height, 0]);
		
		var line = d3.line()
				.x(function(d) { return x(d.dt); })
				.y(function(d) { return y(d.AverageTemperature); });
		
	
		var line2_data = <%-JSON.stringify(result.array.filter(function(element){ return element.Country === "China" && element.City === 'Harbin' && element.dt>0 && element.AverageTemperature>0 && element.dt > 1900 && element.dt <2001; })) %>;
		// console.log(line2_data);
		// var whole_data = [];
		// var years_temp = {};
		// var temp=0;
		// line2_data.forEach(function(d,i){
		// 	temp = d.AverageTemperature;
		// 	console.log(i);
		// 	console.log(years_temp.hasOwnProperty(d.dt));
		// 	if(line2_data.hasOwnProperty(d.dt)){
		// 		if(temp < years_temp[d.dt]){
		// 			temp = years_temp[d.dt];
		// 		}
		// 	}
		// 		years_temp[d.dt] = temp;
		// });
		// line2_data = Math.max.apply(Math, line2_data.map(function(o) { return o.y; }))
		console.log(line2_data);
		line2_data.forEach(function(d) {
				// d.dt = parseTime(d.dt);
				d.dt = d.dt;
				d.AverageTemperature = +d.AverageTemperature;
		});
			x.domain(d3.extent(line2_data, function(d) { return d.dt; }));
			y.domain(d3.extent(line2_data, function(d) { return d.AverageTemperature; }));
    	
		// x.domain(line2_data.map(function(d) { return d.dt; }));
		// console.log(x);
		// y.domain([d3.min(line2_data,function(d){return d.AverageTemperature}), d3.max(line2_data, function(d) { return d.AverageTemperature; })]);
	
		
			svg.append("g")
					.attr("transform", "translate(0," + height + ")")
					.call(d3.axisBottom(x))
				.select(".domain")
					.remove();
		
			svg.append("g")
					.call(d3.axisLeft(y))
				.append("text")
					.attr("fill", "#000")
					.attr("transform", "rotate(-90)")
					.attr("y", 6)
					.attr("dy", "0.71em")
					.attr("text-anchor", "end")
					.text("Temperature ");
		// console.log(line);
			svg.append("path")
					.datum(line2_data)
					.attr("fill", "none")
					.attr("stroke", "steelblue")
					.attr("stroke-linejoin", "round")
					.attr("stroke-linecap", "round")
					.attr("stroke-width", 1.5)
					.attr("d", line);
			
		// });
		
		</script>


	</body>

</html>