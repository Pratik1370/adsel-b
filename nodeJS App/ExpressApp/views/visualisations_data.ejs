<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Analytics Pro</title>

    <!-- Bootstrap -->
    <link href="../vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="../vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <!-- NProgress -->
    <link href="../vendors/nprogress/nprogress.css" rel="stylesheet">

    <!-- Libraries CSS Files -->
  <link href="lib/font-awesome/css/font-awesome.min.css" rel="stylesheet">
  <link href="lib/animate/animate.min.css" rel="stylesheet">
  <link href="lib/ionicons/css/ionicons.min.css" rel="stylesheet">
  <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
  <link href="lib/lightbox/css/lightbox.min.css" rel="stylesheet">

    <!-- Custom Theme Style -->
    <link href="../build/css/custom.min.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">

  </head>

  <body class="nav-md-0">
    <div class="container body">
      <div class="main_container">
        <div class="col-md-3">
       

            <div class="clearfix"></div>

          </div>
        </div>

        <!-- top navigation 
        <div class="top_nav" >
          <div class="nav_menu" style="background: rgb(34, 49, 63);">
            <nav>

              <ul class="nav navbar-nav">
                <li class="">
                  <a href=# class="site_title" style="color: rgb(255, 255, 255)!important; left: 50%!important: "> <span>Analytics Pro</span></a>
                </li>

                
              </ul>
            </nav>
          </div>
        </div> -->
        <!-- /top navigation -->
          <header id="header" style="background-color: #2C3A47">
          <div class="container-fluid">

            <div id="logo" class="pull-left">
              <h1><a href="#intro" class="scrollto">Analytics Pro</a></h1>
              <!-- Uncomment below if you prefer to use an image logo -->
              <!-- <a href="#intro"><img src="img/logo.png" alt="" title="" /></a>-->
            </div>

            
          </div>
        </header><!-- #header -->

<br><br><br><br><br>
        <!-- page content -->
        <div class="right_col" role="main">
          <div class="">
            
            <div class="clearfix"></div>

            <div class="row">
              

               <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>Line Graph</h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                        <ul class="dropdown-menu" role="menu">
                          <li><a href="#">Settings 1</a>
                          </li>
                          <li><a href="#">Settings 2</a>
                          </li>
                        </ul>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">

                    <div id="echart_line" style="height:70vh;"></div>

                  </div>
                </div>
              </div>
        </div>
        <!-- /page content -->

        <!-- footer content 
        <footer>
          <div class="pull-right">
            Analytics Pro 
          </div>
          <div class="clearfix"></div>
        </footer> -->
        <!-- /footer content -->
      </div>
    </div>

    <!-- jQuery -->
    <script src="../vendors/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap -->
    <script src="../vendors/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- FastClick -->
    <script src="../vendors/fastclick/lib/fastclick.js"></script>
    <!-- NProgress -->
    <script src="../vendors/nprogress/nprogress.js"></script>
    <!-- ECharts -->
    <script src="../vendors/echarts/dist/echarts.min.js"></script>
    <script src="../vendors/echarts/map/js/world.js"></script>

    <!-- Custom Theme Scripts -->
    <!-- <script src="../build/js/custom.js"></script> -->
  
  </body>
  <script>
   (function($,sr){
	// debouncing function from John Hann
	// http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/
	var debounce = function (func, threshold, execAsap) {
		var timeout;

			return function debounced () {
					var obj = this, args = arguments;
					function delayed () {
							if (!execAsap)
									func.apply(obj, args); 
							timeout = null; 
					}

					if (timeout)
							clearTimeout(timeout);
					else if (execAsap)
							func.apply(obj, args);

					timeout = setTimeout(delayed, threshold || 100); 
			};
	};

	// smartresize 
	jQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };

})(jQuery,'smartresize');
/**
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

var CURRENT_URL = window.location.href.split('#')[0].split('?')[0],
	$BODY = $('body'),
	$MENU_TOGGLE = $('#menu_toggle'),
	$SIDEBAR_MENU = $('#sidebar-menu'),
	$SIDEBAR_FOOTER = $('.sidebar-footer'),
	$LEFT_COL = $('.left_col'),
	$RIGHT_COL = $('.right_col'),
	$NAV_MENU = $('.nav_menu'),
	$FOOTER = $('footer');


// /Sidebar

var randNum = function() {
	return (Math.floor(Math.random() * (1 + 40 - 20))) + 20;
};


// Panel toolbox
$(document).ready(function() {
	$('.collapse-link').on('click', function() {
			var $BOX_PANEL = $(this).closest('.x_panel'),
					$ICON = $(this).find('i'),
					$BOX_CONTENT = $BOX_PANEL.find('.x_content');
			
			// fix for some div with hardcoded fix class
			if ($BOX_PANEL.attr('style')) {
					$BOX_CONTENT.slideToggle(200, function(){
							$BOX_PANEL.removeAttr('style');
					});
			} else {
					$BOX_CONTENT.slideToggle(200); 
					$BOX_PANEL.css('height', 'auto');  
			}

			$ICON.toggleClass('fa-chevron-up fa-chevron-down');
	});

	$('.close-link').click(function () {
			var $BOX_PANEL = $(this).closest('.x_panel');

			$BOX_PANEL.remove();
	});
});
// /Panel toolbox

// Tooltip
$(document).ready(function() {
	$('[data-toggle="tooltip"]').tooltip({
			container: 'body'
	});
});
// /Tooltip

// Progressbar
if ($(".progress .progress-bar")[0]) {
	$('.progress .progress-bar').progressbar();
}
// /Progressbar

// Switchery
$(document).ready(function() {
	if ($(".js-switch")[0]) {
			var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
			elems.forEach(function (html) {
					var switchery = new Switchery(html, {
							color: '#26B99A'
					});
			});
	}
});
// /Switchery


// iCheck
$(document).ready(function() {
	if ($("input.flat")[0]) {
			$(document).ready(function () {
					$('input.flat').iCheck({
							checkboxClass: 'icheckbox_flat-green',
							radioClass: 'iradio_flat-green'
					});
			});
	}
});
// /iCheck

// Table
$('table input').on('ifChecked', function () {
	checkState = '';
	$(this).parent().parent().parent().addClass('selected');
	countChecked();
});
$('table input').on('ifUnchecked', function () {
	checkState = '';
	$(this).parent().parent().parent().removeClass('selected');
	countChecked();
});

var checkState = '';

$('.bulk_action input').on('ifChecked', function () {
	checkState = '';
	$(this).parent().parent().parent().addClass('selected');
	countChecked();
});
$('.bulk_action input').on('ifUnchecked', function () {
	checkState = '';
	$(this).parent().parent().parent().removeClass('selected');
	countChecked();
});
$('.bulk_action input#check-all').on('ifChecked', function () {
	checkState = 'all';
	countChecked();
});
$('.bulk_action input#check-all').on('ifUnchecked', function () {
	checkState = 'none';
	countChecked();
});

function countChecked() {
	if (checkState === 'all') {
			$(".bulk_action input[name='table_records']").iCheck('check');
	}
	if (checkState === 'none') {
			$(".bulk_action input[name='table_records']").iCheck('uncheck');
	}

	var checkCount = $(".bulk_action input[name='table_records']:checked").length;

	if (checkCount) {
			$('.column-title').hide();
			$('.bulk-actions').show();
			$('.action-cnt').html(checkCount + ' Records Selected');
	} else {
			$('.column-title').show();
			$('.bulk-actions').hide();
	}
}



// Accordion
$(document).ready(function() {
	$(".expand").on("click", function () {
			$(this).next().slideToggle(200);
			$expand = $(this).find(">:first-child");

			if ($expand.text() == "+") {
					$expand.text("-");
			} else {
					$expand.text("+");
			}
	});
});

// NProgress
if (typeof NProgress != 'undefined') {
	$(document).ready(function () {
			NProgress.start();
	});

	$(window).load(function () {
			NProgress.done();
	});
}


	//hover and retain popover when on popover content
			var originalLeave = $.fn.popover.Constructor.prototype.leave;
			$.fn.popover.Constructor.prototype.leave = function(obj) {
				var self = obj instanceof this.constructor ?
					obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type);
				var container, timeout;

				originalLeave.call(this, obj);

				if (obj.currentTarget) {
					container = $(obj.currentTarget).siblings('.popover');
					timeout = self.timeout;
					container.one('mouseenter', function() {
						//We entered the actual popover â€“ call off the dogs
						clearTimeout(timeout);
						//Let's monitor popover content instead
						container.one('mouseleave', function() {
							$.fn.popover.Constructor.prototype.leave.call(self, self);
						});
					});
				}
			};

			$('body').popover({
				selector: '[data-popover]',
				trigger: 'click hover',
				delay: {
					show: 50,
					hide: 400
				}
			});


function gd(year, month, day) {
	return new Date(year, month - 1, day).getTime();
}


		/* INPUTS */
		
		function onAddTag(tag) {
			alert("Added a tag: " + tag);
			}

			function onRemoveTag(tag) {
			alert("Removed a tag: " + tag);
			}

			function onChangeTag(input, tag) {
			alert("Changed a tag: " + tag);
		 }

	
	function init_charts() {
		
			console.log('run_charts  typeof [' + typeof (Chart) + ']');
		
			if( typeof (Chart) === 'undefined'){ return; }
			
			console.log('init_charts');
		
			
			Chart.defaults.global.legend = {
				enabled: false
			};	
	}
	
	/* ECHRTS */

	
	function init_echarts(xx) {
		// xx = JSON.parse(xx);
	// console.log(xx.single_country_Unc_temp);
	// console.log(typeof JSON.parse(xx));
			if( typeof (echarts) === 'undefined'){ return; }
			console.log('init_echarts');
		
	
				var theme = {
				color: [
					'#26B99A', '#34495E', '#BDC3C7', '#3498DB',
					'#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
				],

				title: {
					itemGap: 8,
					textStyle: {
						fontWeight: 'normal',
						color: '#408829'
					}
				},

				dataRange: {
					color: ['#1f610a', '#97b58d']
				},

				toolbox: {
					color: ['#408829', '#408829', '#408829', '#408829']
				},

				tooltip: {
					backgroundColor: 'rgba(0,0,0,0.5)',
					axisPointer: {
						type: 'line',
						lineStyle: {
							color: '#408829',
							type: 'dashed'
						},
						crossStyle: {
							color: '#408829'
						},
						shadowStyle: {
							color: 'rgba(200,200,200,0.3)'
						}
					}
				},

				dataZoom: {
					dataBackgroundColor: '#eee',
					fillerColor: 'rgba(64,136,41,0.2)',
					handleColor: '#408829'
				},
				grid: {
					borderWidth: 0
				},

				categoryAxis: {
					axisLine: {
						lineStyle: {
							color: '#408829'
						}
					},
					splitLine: {
						lineStyle: {
							color: ['#eee']
						}
					}
				},

				valueAxis: {
					axisLine: {
						lineStyle: {
							color: '#408829'
						}
					},
					splitArea: {
						show: true,
						areaStyle: {
							color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
						}
					},
					splitLine: {
						lineStyle: {
							color: ['#eee']
						}
					}
				},
				timeline: {
					lineStyle: {
						color: '#408829'
					},
					controlStyle: {
						normal: {color: '#408829'},
						emphasis: {color: '#408829'}
					}
				},

				k: {
					itemStyle: {
						normal: {
							color: '#68a54a',
							color0: '#a9cba2',
							lineStyle: {
								width: 1,
								color: '#408829',
								color0: '#86b379'
							}
						}
					}
				},
				force: {
					itemStyle: {
						normal: {
							linkStyle: {
								strokeColor: '#408829'
							}
						}
					}
				},
				chord: {
					padding: 4,
					itemStyle: {
						normal: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							},
							chordStyle: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								}
							}
						},
						emphasis: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							},
							chordStyle: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								}
							}
						}
					}
				},
				textStyle: {
					fontFamily: 'Arial, Verdana, sans-serif'
				}
			};


			 //echart Line
			
		if ($('#echart_line').length ){ 
			
			var echartLine = echarts.init(document.getElementById('echart_line'), theme);
			var data = [];
			for(key in xx.cities){
				// console.log(xx.cities[key]);
						var obj_data = {
							name: key,
							type: 'line',
							smooth: true,
							itemStyle: {
								normal: {
									areaStyle: {
									type: 'default'
									}
								}
							},
							data: xx.cities[key]
						}
						data.push(obj_data);
			}

			// console.log(Object.keys(xx.cities));
			echartLine.setOption({
			title: {
				text: 'Australia',
				subtext: 'Avg Temperature'
			},
			tooltip: {
				trigger: 'axis'
			},
			legend: {
				x: 220,
				y: 40,
				data: Object.keys(xx.cities)
			},
			toolbox: {
				show: true,
				feature: {
				magicType: {
					show: true,
					title: {
					line: 'Line',
					bar: 'Bar',
					stack: 'Stack',
					tiled: 'Tiled'
					},
					type: ['line', 'bar', 'stack', 'tiled']
				},
				restore: {
					show: true,
					title: "Restore"
				},
				saveAsImage: {
					show: true,
					title: "Save Image"
				}
				}
			},
			calculable: true,
			xAxis: [{
				type: 'category',
				boundaryGap: false,
				data: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
			}],
			yAxis: [{
				type: 'value'
			}],
			series: data

			});
// console.log(xx.cities);
		} 
			



  }
  $(document).ready(function() {

  var xx = <%- JSON.stringify(jsonObj1); %>
//   console.log(xx);
  init_charts();
  init_echarts(xx);
});
  </script>
</html>
